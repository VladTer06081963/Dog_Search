/** @format */
"use client";

import { useState } from "react";
import { Search, Info, BookOpen, MessageSquare } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { DogBreedCard } from "@/components/dog-breed-card";
import { getRandomDogBreed, searchDogBreed } from "@/lib/dog-api";
import { fetchBreedInfo } from "@/lib/fetch-breed-info";
import { BreedDirectory } from "@/components/BreedDirectory";
import { PawPrint } from "lucide-react";

export default function DogBreedSearch() {
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedBreed, setSelectedBreed] = useState("");
  const [breedInfo, setBreedInfo] = useState<any>(null);
  const [infoContent, setInfoContent] = useState("");
  const [activeSource, setActiveSource] = useState<
    "none" | "wikipedia" | "chatgpt" | "dogapi"
  >("none");

  const [isLoading, setIsLoading] = useState(false);
  const [showDirectory, setShowDirectory] = useState(false); // ‚úÖ –î–û–ë–ê–í–¨ –≠–¢–û –°–Æ–î–ê
  const [hasSearched, setHasSearched] = useState(false);
  // const [wikiLang, setWikiLang] = useState<"ru" | "uk" | "en">("uk");
  const [wikiLang, setWikiLang] = useState<"ru" | "uk" | "en">("en");

  const handleSearch = async () => {
    if (searchQuery.trim()) {
      setSelectedBreed(searchQuery);
      setInfoContent("");
      setActiveSource("none");

      try {
        await fetchBreedInfo(
          searchQuery,
          "default",
          setInfoContent,
          setBreedInfo,
          setIsLoading,
          setActiveSource
        );
        setHasSearched(true);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Ä–æ–¥—ã:", err);
      } finally {
      }
    }
  };

  const handleRandomBreed = async () => {
    setIsLoading(true);
    setInfoContent("");
    setActiveSource("none");

    try {
      const randomBreed = await getRandomDogBreed();
      setSearchQuery(randomBreed.name);
      setSelectedBreed(randomBreed.name);
      await fetchBreedInfo(
        randomBreed.name,
        "default",
        setInfoContent,
        setBreedInfo,
        setIsLoading,
        setActiveSource
      );
      setHasSearched(true);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ—Ä–æ–¥—ã:", error);
    } finally {
    }
  };

  return (
    <div className="flex flex-col min-h-screen bg-gray-50">
      <header className="bg-white border-b p-4">
        <div className="text-center">
          <h1 className="text-2xl font-bold inline-flex items-center justify-center gap-2">
            <PawPrint className="w-6 h-6 text-blue-600" />
            –ü–æ–∏—Å–∫ –ø–æ—Ä–æ–¥ —Å–æ–±–∞–∫
          </h1>
          <h3 className="text-xl font-bold text-center text-gray-700 mt-1">
            –£–∑–Ω–∞–π –≤—Å—ë –æ —Å–≤–æ—ë–º –ª—é–±–∏–º—Ü–µ üêæ
          </h3>
        </div>
      </header>

      <main className="flex flex-1 overflow-hidden">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ) */}
        <aside className="w-64 bg-white border-r p-4 hidden md:block">
          <Card>
            <CardHeader>
              <CardTitle className="text-sm font-medium flex items-center">
                <MessageSquare className="h-4 w-4 mr-2" />
                –°–ø—Ä–æ—Å–∏—Ç—å ChatGPT
              </CardTitle>
            </CardHeader>
            <CardContent>
              <Button
                variant="outline"
                size="sm"
                className="w-full"
                disabled={
                  !selectedBreed || (activeSource === "chatgpt" && isLoading)
                }
                onClick={() =>
                  fetchBreedInfo(
                    selectedBreed,
                    "chatgpt",
                    setInfoContent,
                    setBreedInfo,
                    setIsLoading,
                    setActiveSource
                  )
                }
              >
                {isLoading && activeSource === "chatgpt"
                  ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                  : "–°–ø—Ä–æ—Å–∏—Ç—å ChatGPT"}
              </Button>
            </CardContent>
          </Card>
        </aside>

        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å */}
        <div className="flex-1 flex flex-col">
          {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∏ –∫–Ω–æ–ø–∫–∏ */}
          <div className="p-6 bg-white">
            <div className="max-w-xl mx-auto flex flex-col gap-3">
              <Input
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–¥—É —Å–æ–±–∞–∫–∏"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                onKeyDown={(e) => e.key === "Enter" && handleSearch()}
                className="w-full"
              />
              <div className="flex gap-2 justify-between">
                <Button
                  onClick={handleSearch}
                  disabled={isLoading}
                  className="flex-1"
                >
                  <Search className="h-4 w-4 mr-2" />
                  –ü–æ–∏—Å–∫
                </Button>
                <Button
                  variant="outline"
                  onClick={handleRandomBreed}
                  disabled={isLoading}
                  className="flex-1"
                >
                  –°–ª—É—á–∞–π–Ω–∞—è –ø–æ—Ä–æ–¥–∞
                </Button>
              </div>
            </div>
          </div>

          {/* –í–∫–ª–∞–¥–∫–∏ –Ω–∞ –º–æ–±–∏–ª–∫–µ */}
          <div className="md:hidden border-t border-b">
            <Tabs defaultValue="search" className="w-full">
              <TabsList className="grid grid-cols-3 w-full">
                <TabsTrigger value="search">–ü–æ–∏—Å–∫</TabsTrigger>
                <TabsTrigger value="chatgpt">ChatGPT</TabsTrigger>
                <TabsTrigger value="wikipedia">–í–∏–∫–∏–ø–µ–¥–∏—è</TabsTrigger>
              </TabsList>

              <TabsContent value="search" className="p-4 space-y-4">
                <Button
                  variant="outline"
                  size="sm"
                  className="w-full"
                  onClick={() => setShowDirectory((prev) => !prev)}
                >
                  {showDirectory
                    ? "–°–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–¥"
                    : "–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–¥"}
                </Button>

                {showDirectory && (
                  <BreedDirectory
                    onSelect={(breedName) => {
                      setSearchQuery(breedName);
                      handleSearch();
                    }}
                  />
                )}
              </TabsContent>

              <TabsContent value="chatgpt" className="p-4">
                <Button
                  variant="outline"
                  size="sm"
                  className="w-full"
                  disabled={
                    !selectedBreed || (activeSource === "chatgpt" && isLoading)
                  }
                  onClick={() =>
                    fetchBreedInfo(
                      selectedBreed,
                      "chatgpt",
                      setInfoContent,
                      setBreedInfo,
                      setIsLoading,
                      setActiveSource
                    )
                  }
                >
                  {isLoading && activeSource === "chatgpt"
                    ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                    : "–°–ø—Ä–æ—Å–∏—Ç—å ChatGPT"}
                </Button>
              </TabsContent>

              <TabsContent value="wikipedia" className="p-4 space-y-3">
                {/* 3.1 –°–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ */}
                <div className="flex items-center gap-2">
                  <label htmlFor="wiki-lang-mobile" className="text-sm">
                    –Ø–∑—ã–∫:
                  </label>
                  <select
                    id="wiki-lang-mobile"
                    value={wikiLang}
                    onChange={(e) => setWikiLang(e.target.value as any)}
                    className="border rounded px-2 py-1 text-sm flex-1"
                  >
                    <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
                    <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                    <option value="en">English</option>
                  </select>
                </div>

                {/* 3.2 –ö–Ω–æ–ø–∫–∞ */}
                <Button
                  variant="outline"
                  size="sm"
                  className="w-full"
                  disabled={
                    !selectedBreed ||
                    (activeSource === "wikipedia" && isLoading)
                  }
                  onClick={() =>
                    fetchBreedInfo(
                      selectedBreed,
                      "wikipedia",
                      setInfoContent,
                      setBreedInfo,
                      setIsLoading,
                      setActiveSource,
                      wikiLang // ‚Üê –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ —è–∑—ã–∫
                    )
                  }
                >
                  {isLoading && activeSource === "wikipedia"
                    ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                    : "–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é"}
                </Button>
              </TabsContent>

              {/* <TabsContent value="wikipedia" className="p-4">
                <Button
                  variant="outline"
                  size="sm"
                  className="w-full"
                  disabled={
                    !selectedBreed ||
                    (activeSource === "wikipedia" && isLoading)
                  }
                  onClick={() =>
                    fetchBreedInfo(
                      selectedBreed,
                      "wikipedia",
                      setInfoContent,
                      setBreedInfo,
                      setIsLoading,
                      setActiveSource
                    )
                  }
                >
                  {isLoading && activeSource === "wikipedia"
                    ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                    : "–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é"}
                </Button>
              </TabsContent> */}
            </Tabs>
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
          <div className="flex-1 p-4 overflow-auto">
            {isLoading ? (
              <p className="text-center text-gray-500">–ü–æ–∏—Å–∫ –ø–æ—Ä–æ–¥—ã...</p>
            ) : breedInfo ? (
              <DogBreedCard breed={breedInfo} />
            ) : hasSearched ? (
              <p className="text-center text-gray-500">–ü–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</p>
            ) : (
              <p className="text-center text-gray-500 text-sm max-w-md mx-auto">
                üê∂ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–¥—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ <strong>–∫–∞—Ç–∞–ª–æ–≥–∞</strong> –∏
                –Ω–∞–∂–º–∏—Ç–µ <strong>–ü–æ–∏—Å–∫</strong>.<br />
                üìö –î–ª—è <strong>–í–∏–∫–∏–ø–µ–¥–∏–∏</strong> –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ (üá¨üáß
                English –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, <strong>–†—É—Å—Å–∫–∏–π</strong>, üá∫üá¶
                –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞)&nbsp;‚Äî —è–∑—ã–∫ –∑–∞–ø—Ä–æ—Å–∞ <strong>–î–û–õ–ñ–ï–ù</strong> \
                —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏. –ù–∞–∂–º–∏—Ç–µ ¬´–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é¬ª.
                <br />
                ü§ñ –ß—Ç–æ–±—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–∑–Ω–∞—Ç—å –æ –ø–æ—Ä–æ–¥–µ, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–π –∏–ª–∏
                —Ä—É—Å—Å–∫–æ–π –í–∏–∫–∏–ø–µ–¥–∏–∏, –Ω–∞–∂–º–∏—Ç–µ <strong>—Å–ø—Ä–æ—Å–∏—Ç—å ChatGPT</strong>.
              </p>

              // <p className="text-center text-gray-500 text-sm max-w-md mx-auto">
              //   üê∂ –í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–¥—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ <strong>–∫–∞—Ç–∞–ª–æ–≥–∞</strong> –∏
              //   –Ω–∞–∂–º–∏—Ç–µ <strong>–ü–æ–∏—Å–∫</strong>.<br />
              //   üìö –î–ª—è <strong>–í–∏–∫–∏–ø–µ–¥–∏–∏</strong> –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ (üá¨üáß
              //   English –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, <strong>–†—É—Å—Å–∫–∏–π</strong>, üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞) –∏
              //   –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é¬ª.
              //   <br />
              //   ü§ñ –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –ø–æ—Ä–æ–¥–µ –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≤ –£–∫—Ä–∞–∏–Ω—Å–∫–æ–π –∏
              //   –†—É—Å—Å–∫–æ–π –í–∏–∫–∏–ø–µ–¥–∏–∏ ‚Äî –Ω–∞–∂–º–∏—Ç–µ <strong>ChatGPT</strong>, –æ–Ω –≤—ã–¥–∞—Å—Ç
              //   –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ üêï –ø–∏—Ç–æ–º—Ü–µ –∏ –∏—Ö –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤{" "}
              //   <strong>–ö–∏—Ä–∏–ª–ª–∏—Ü–µ</strong>¬ª.
              // </p>

              // <p className="text-center text-gray-500 text-sm max-w-md mx-auto">
              //   üê∂ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä–æ–¥—ã –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑{" "}
              //   <strong>–∫–∞—Ç–∞–ª–æ–≥–∞</strong>. <br />
              //   <strong>–∫–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–¥</strong>. üêï –ù–∞–∂–º–∏—Ç–µ{" "}
              //   <strong>–ü–æ–∏—Å–∫</strong> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ{" "}
              //   <strong>–°–ª—É—á–∞–π–Ω—É—é –ø–æ—Ä–æ–¥—É</strong>.<br />
              //   üìö –•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏? –°–ø—Ä–æ—Å–∏—Ç–µ <strong>
              //     –í–∏–∫–∏–ø–µ–¥–∏—é
              //   </strong>{" "}
              //   –∏–ª–∏ ü§ñ <strong>ChatGPT</strong> ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é
              //   –∫–Ω–æ–ø–∫—É!
              // </p>
            )}
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ) */}
        <aside className="w-64 bg-white border-l p-4 hidden md:flex flex-col gap-6">
          {/* –í–∏–∫–∏–ø–µ–¥–∏—è */}
          {/* <Card>
            <CardHeader>
              <CardTitle className="text-sm font-medium flex items-center">
                <BookOpen className="h-4 w-4 mr-2" />
                –°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é
              </CardTitle>
            </CardHeader>
            <CardContent>
              <Button
                variant="outline"
                size="sm"
                className="w-full"
                disabled={
                  !selectedBreed || (activeSource === "wikipedia" && isLoading)
                }
                onClick={() =>
                  fetchBreedInfo(
                    selectedBreed,
                    "wikipedia",
                    setInfoContent,
                    setBreedInfo,
                    setIsLoading,
                    setActiveSource
                  )
                }
              >
                {isLoading && activeSource === "wikipedia"
                  ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                  : "–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é"}
              </Button>
            </CardContent>
          </Card> */}

          <Card>
            <CardHeader>
              <CardTitle className="text-sm font-medium flex items-center">
                <BookOpen className="h-4 w-4 mr-2" />
                –°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-2">
              {/* 2.1 –°–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ */}
              <div className="flex items-center gap-2">
                <label htmlFor="wiki-lang" className="text-xs">
                  –Ø–∑—ã–∫:
                </label>
                <select
                  id="wiki-lang"
                  value={wikiLang}
                  onChange={(e) => setWikiLang(e.target.value as any)}
                  className="border rounded px-2 py-1 text-xs"
                >
                  <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
                  <option value="ru">–†—É—Å—Å–∫–∏–π</option>
                  <option value="en">English</option>
                </select>
              </div>

              {/* 2.2 –ö–Ω–æ–ø–∫–∞ */}
              <Button
                variant="outline"
                size="sm"
                className="w-full"
                disabled={
                  !selectedBreed || (activeSource === "wikipedia" && isLoading)
                }
                onClick={() =>
                  fetchBreedInfo(
                    selectedBreed,
                    "wikipedia",
                    setInfoContent,
                    setBreedInfo,
                    setIsLoading,
                    setActiveSource,
                    wikiLang // ‚Üê –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫
                  )
                }
              >
                {isLoading && activeSource === "wikipedia"
                  ? "–ó–∞–≥—Ä—É–∑–∫–∞..."
                  : "–°–ø—Ä–æ—Å–∏—Ç—å –í–∏–∫–∏–ø–µ–¥–∏—é"}
              </Button>
            </CardContent>
          </Card>

          {/* –ö–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–¥ */}
          <BreedDirectory
            onSelect={(breedName) => {
              setSearchQuery(breedName);
              setSelectedBreed(breedName);
              fetchBreedInfo(
                breedName,
                "default",
                setInfoContent,
                setBreedInfo,
                setIsLoading,
                setActiveSource
              );
            }}
          />
        </aside>
      </main>

      <footer className="bg-white border-t p-4">
        <div className="max-w-6xl mx-auto">
          {isLoading ? (
            <p className="text-center text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...</p>
          ) : infoContent ? (
            <div className="p-4 bg-gray-50 rounded-lg">
              <h3 className="text-sm font-medium mb-2 flex items-center">
                <Info className="h-4 w-4 mr-2" />
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Ä–æ–¥–µ {selectedBreed}
                <span className="ml-2 text-xs text-gray-500">
                  (–ò—Å—Ç–æ—á–Ω–∏–∫: {activeSource})
                </span>
              </h3>
              <p className="text-sm whitespace-pre-line">{infoContent}</p>
            </div>
          ) : breedInfo ? (
            <p className="text-center text-gray-500">
              –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            </p>
          ) : (
            <p className="text-center text-gray-500">–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä–æ–¥—É</p>
          )}
        </div>
      </footer>
    </div>
  );
}
